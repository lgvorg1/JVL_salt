name: Test CI

on:
  workflow_run: 
    workflows: [ 'Build CI' ]
    types: [completed]

  workflow_dispatch:
jobs:
                
  prt_build_and_upload:
    runs-on: ubuntu-latest
    steps:


      - name: 'Download artifact'
        uses: actions/github-script@v6
        with:
          script: |
            let allArtifacts = await github.rest.actions.listWorkflowRunArtifacts({
               owner: context.repo.owner,
               repo: context.repo.repo,
               run_id: context.payload.workflow_run.id,
            });
            let matchArtifact = allArtifacts.data.artifacts.filter((artifact) => {
              return artifact.name == "archive-bin"
            })[0];
            let download = await github.rest.actions.downloadArtifact({
               owner: context.repo.owner,
               repo: context.repo.repo,
               artifact_id: matchArtifact.id,
               archive_format: 'zip',
            });
            let fs = require('fs');
            fs.writeFileSync(`${process.env.GITHUB_WORKSPACE}/myartifact.zip`, Buffer.from(download.data));

      - name: 'Unzip artifact'
        run: |
          unzip -o myartifact.zip
          ls -lR
          exit 1


      - name: Checking out PR code
        uses: actions/checkout@v4
        if: ${{ github.event_name == 'pull_request_target' }}
        with:
          # Number of commits to fetch. 0 indicates all history for all branches and tags.
          # Default: 1
          fetch-depth: '0'
          # This is to get the PR code instead of the repo code
          ref: ${{ github.event.pull_request.head.sha }}

      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4
        name: Checking out main code
        if: ${{ github.event_name == 'push' || github.event_name == 'workflow_dispatch' }}
        with:
          # Number of commits to fetch. 0 indicates all history for all branches and tags.
          # Default: 1
          fetch-depth: '0'
    
      - name: Building ... 
        run: |
          java -version
          mvn -version
          #apt-get update ; apt-get install maven default-jdk -y ; update-alternatives --config javac
          mvn clean package 
          ls -l target/*.war
        #env:
        #  PR_TITLE: ${{github.event.pull_request.title}}
